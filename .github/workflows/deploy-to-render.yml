name: Deploy to Render

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
  workflow_dispatch:

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  # Job 1: Run Tests First
  test-services:
    name: Test Services Before Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Test User Service
        run: |
          cd backend/user-service
          mvn clean test

      - name: Test Product Service
        run: |
          cd backend/product-service
          mvn clean test

  # Job 2: Trigger Render Deployment
  deploy-to-render:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test-services
    steps:
      - name: Deploy User Service to Render
        run: |
          curl -X POST "https://api.render.com/deploy/srv-${{ secrets.RENDER_USER_SERVICE_ID }}" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"

      - name: Deploy Product Service to Render  
        run: |
          curl -X POST "https://api.render.com/deploy/srv-${{ secrets.RENDER_PRODUCT_SERVICE_ID }}" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"

      - name: Wait for deployments
        run: |
          echo "Waiting for services to deploy..."
          sleep 60

  # Job 3: Deployment Summary
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: deploy-to-render
    if: always()
    steps:
      - name: Create deployment summary
        run: |
          echo "## ðŸš€ Deployment Completed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Services Deployed:" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ§‘ **User Service**: https://user-service-latest.onrender.com" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“¦ **Product Service**: https://product-service-latest.onrender.com" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Your APIs:" >> $GITHUB_STEP_SUMMARY
          echo "- Health Check User: \`GET https://user-service-latest.onrender.com/api/users/health\`" >> $GITHUB_STEP_SUMMARY
          echo "- Health Check Product: \`GET https://product-service-latest.onrender.com/api/products/health\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸŽ‰ Ready for Postman testing!" >> $GITHUB_STEP_SUMMARY
