name: Deploy to Railway

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
  workflow_dispatch:

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  # Job 1: Run Tests First
  test-services:
    name: Test Services Before Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Test User Service
        run: |
          cd backend/user-service
          mvn clean test

      - name: Test Product Service
        run: |
          cd backend/product-service
          mvn clean test

  # Job 2: Deploy User Service to Railway
  deploy-user-service:
    name: Deploy User Service
    runs-on: ubuntu-latest
    needs: test-services
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        uses: railway-app/railway@v1
        with:
          service: user-service
          token: ${{ secrets.RAILWAY_TOKEN }}
        env:
          RAILWAY_SERVICE_ROOT: backend/user-service

  # Job 3: Deploy Product Service to Railway  
  deploy-product-service:
    name: Deploy Product Service
    runs-on: ubuntu-latest
    needs: test-services
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        uses: railway-app/railway@v1
        with:
          service: product-service
          token: ${{ secrets.RAILWAY_TOKEN }}
        env:
          RAILWAY_SERVICE_ROOT: backend/product-service

  # Job 4: Deployment Summary
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-user-service, deploy-product-service]
    if: always()
    steps:
      - name: Create deployment summary
        run: |
          echo "## ðŸš€ Deployment Completed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Services Deployed:" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ§‘ **User Service**: https://user-service-production.up.railway.app" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“¦ **Product Service**: https://product-service-production.up.railway.app" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Your APIs:" >> $GITHUB_STEP_SUMMARY
          echo "- Health Check User: \`GET https://user-service-production.up.railway.app/api/users/health\`" >> $GITHUB_STEP_SUMMARY
          echo "- Health Check Product: \`GET https://product-service-production.up.railway.app/api/products/health\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸŽ‰ Ready for Postman testing!" >> $GITHUB_STEP_SUMMARY
