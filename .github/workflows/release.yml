name: Release Pipeline

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*.*.*'

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build User Service
        run: |
          cd backend/user-service
          mvn clean package -DskipTests

      - name: Build Product Service
        run: |
          cd backend/product-service
          mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push User Service release image
        uses: docker/build-push-action@v5
        with:
          context: backend/user-service
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/user-service:${{ steps.version.outputs.VERSION }}
            ghcr.io/${{ github.repository_owner }}/user-service:stable

      - name: Build and push Product Service release image
        uses: docker/build-push-action@v5
        with:
          context: backend/product-service
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/product-service:${{ steps.version.outputs.VERSION }}
            ghcr.io/${{ github.repository_owner }}/product-service:stable

      - name: Upload release artifacts
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: backend/user-service/target/user-service-0.0.1-SNAPSHOT.jar
          asset_name: user-service-${{ steps.version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Create deployment summary
        run: |
          echo "## ðŸš€ Release ${{ steps.version.outputs.VERSION }} Built Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Docker Images:" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository_owner }}/user-service:${{ steps.version.outputs.VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository_owner }}/product-service:${{ steps.version.outputs.VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Ready for deployment! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
